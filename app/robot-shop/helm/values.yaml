# Registry and repository for Docker images
# Default is docker/robotshop/image:latest
image:
  repo: robotshop
  version: latest
  pullPolicy: IfNotPresent

amqp_host: "rabbitmq-cluster"
mysql_host: "robotshopmysql.cn9m6m4s8zo0.us-west-2.rds.amazonaws.com"
mysql_password: "docdb3421z"
mongo_url: "mongodb://roboadmin:docdb3421z@robotshopdocdb-cluster.cluster-chh4lgwsalzi.us-east-1.docdb.amazonaws.com:27017/?replicaSet=rs0&readPreference=secondaryPreferred&retryWrites=false"
# EUM configuration
# Provide your key and set the endpoint
eum:
  key: null
  url: https://eum-eu-west-1.instana.io
  #url: https://eum-us-west-2.instana.io

instana:
  enabled: false

# Pod Security Policy
psp:
  enabled: false

# For the mini ones minikube, minishift set to true
nodeport: false

# "special" Openshift. Set to true when deploying to any openshift flavour
openshift: false

ocCreateRoute: false

######################################
# Affinities for individual workloads
# set in the following way:
# <workload>:
#   affinity: {}
#   nodeSelector: {}
#   tolerations: []
######################################

cart:
  replicas: 3
  resources:
    limits:
      cpu: 200m
      memory: 100Mi
    requests:
      cpu: 100m
      memory: 50Mi
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            service: cart
        topologyKey: "kubernetes.io/hostname"
  nodeSelector:
    workload: app

catalogue:
  replicas: 3
  resources:
    limits:
      cpu: 200m
      memory: 100Mi
    requests:
      cpu: 100m
      memory: 50Mi
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            service: catalogue
        topologyKey: "kubernetes.io/hostname"
  nodeSelector:
    workload: app

dispatch:
  replicas: 3
  resources:
    limits:
      cpu: 200m
      memory: 100Mi
    requests:
      cpu: 100m
      memory: 50Mi
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            service: dispatch
        topologyKey: "kubernetes.io/hostname"
  nodeSelector:
    workload: app

mongodb:
  tolerations:
    - key: "persistent"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
  nodeSelector:
    workload: persistent


mysql:
  tolerations:
    - key: "persistent"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
  nodeSelector:
    workload: persistent

payment:
  # Alternative payment gateway URL
  # Default is https://www.paypal.com
  gateway: null
  #gateway: https://www.worldpay.com

  replicas: 3
  resources:
    limits:
      cpu: 200m
      memory: 100Mi
    requests:
      cpu: 100m
      memory: 50Mi
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            service: payment
        topologyKey: "kubernetes.io/hostname"
  nodeSelector:
    workload: app

rabbitmq:
  replicas: 3
  resources:
    requests:
      cpu: 500m
      memory: 2Gi
    limits:
      cpu: 1
      memory: 2Gi
  tolerations:
    - key: "persistent"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
  nodeSelector:
    workload: persistent

ratings:
  replicas: 3
  resources:
    limits:
      cpu: 200m
      memory: 100Mi
    requests:
      cpu: 100m
      memory: 50Mi
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            service: ratings
        topologyKey: "kubernetes.io/hostname"
  nodeSelector:
    workload: app

redis:
  # Storage class to use with redis statefulset.
  storageClassName: gp2
  tolerations:
    - key: "persistent"
      operator: "Equal"
      value: "true"
      effect: "NoSchedule"
  nodeSelector:
    workload: persistent


shipping:
  replicas: 3
  resources:
    limits:
      cpu: 200m
      memory: 2Gi
    requests:
      cpu: 100m
      memory: 1Gi
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            service: shipping
        topologyKey: "kubernetes.io/hostname"
  nodeSelector:
    workload: app

mysqlseeder:
  resources:
    limits:
      cpu: 200m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 500Mi

user: 
  replicas: 3
  resources:
    limits:
      cpu: 200m
      memory: 100Mi
    requests:
      cpu: 100m
      memory: 50Mi
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            service: user
        topologyKey: "kubernetes.io/hostname"
  nodeSelector:
    workload: app

web:
  replicas: 3
  resources:
    limits:
      cpu: 200m
      memory: 100Mi
    requests:
      cpu: 100m
      memory: 50Mi
  affinity:
    podAntiAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchLabels:
            service: web
        topologyKey: "kubernetes.io/hostname"
  nodeSelector:
    workload: app
